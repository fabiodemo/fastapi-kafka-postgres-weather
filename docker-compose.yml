version: 3

services:
  zookeeper:
    image: zookeeper:latest
    ports:
      - "2181:2181"


  kafka:
    image: confluentinc/cp-kafka:latest
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9092,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT, OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEPEER_CONNECT: zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

    
  postgres:
    image: postgres:latest
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: weather_data
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
  

  weather_producer:
    build: ./weather_producer
    depends_on:
      - kafka
    environment:
      KAFKA_BROKER_URL: kafka:9092
      NOAA_TOKEN: ${NOAA_TOKEN}

  weather_consumer:
    build: ./weather_consumer
    depends_on:
      - kafka
      - postgres
    environment:
      KAFKA_BROKER_URL: kafka:9092
      POSTGRES_HOST: postgres
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: weather_data

  web_app:
    build: .
    command: uvicorn web_app:app --host 0.0.0.0 --port 8000 --reload
    ports: "8000:8000"
    depends_on:
      - postgres
    environment:
      POSTGRES_HOST: postgres
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: weather_data